# Generated by using Rcpp::compileAttributes() -> do not edit by hand
# Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#' American Option Local Volatility 1D
#'
#' This function evaluates an American-style option on a common stock with local volatility using finite differences.
#'
#' @param s_0 Stock spot price
#' @param k Strike price
#' @param tau Time to expiry
#' @param r_d Risk-free rate (domestic)
#' @param q Dividend yield
#' @param sigma Local volatility matrix
#' @param type Either "call" or "put"
#' @param s_min max value of the underlying prices grid
#' @param s_max min value of the underlying prices grid
#' @param n_s Size of asset grid for finite difference grid
#' @param n_t Size of time grid for finite difference grid
#' @param lambda Penalty parameter greater than 1
#' @param tolerance Error tolerance
#'
#' @export
american_option_lv <- function(s_0, k, tau, r_d, q, sigma, type, s_min, s_max, n_s, n_t, lambda, tolerance) {
    .Call(`_LocalVolatility_american_option_lv`, s_0, k, tau, r_d, q, sigma, type, s_min, s_max, n_s, n_t, lambda, tolerance)
}

#' European Option Local Volatility 1D
#'
#' This function evaluates an European-style option on a common stock with local volatility using finite differences.
#'
#' @param s_0 Stock spot price
#' @param k Strike price
#' @param tau Time to expiry
#' @param r_d Risk-free rate (domestic)
#' @param q Dividend yield
#' @param sigma Local volatility matrix
#' @param type Either "call" or "put"
#' @param s_min max value of the underlying prices grid
#' @param s_max min value of the underlying prices grid
#' @param n_s Size of asset grid for finite difference grid
#' @param n_t Size of time grid for finite difference grid
#'
#' @export
european_option_lv <- function(s_0, k, tau, r_d, q, sigma, type, s_min, s_max, n_s, n_t) {
    .Call(`_LocalVolatility_european_option_lv`, s_0, k, tau, r_d, q, sigma, type, s_min, s_max, n_s, n_t)
}

#' American Option Local Volatility 2D
#'
#' This function evaluates an American-style option on a common stock with local volatility in a foreing currency using finite differences.
#'
#' @param s_0 Stock spot price
#' @param x_0 FX spot price
#' @param k Strike price
#' @param tau Time to expiry
#' @param r_d Risk-free rate (domestic)
#' @param r_f Risk-free rate (foreign)
#' @param q Dividend yield
#' @param sigma_s Local volatility matrix of the stock
#' @param sigma_x Local volatility matrix of the FX
#' @param rho Correlatin between the stock and the FX
#' @param type Either "call" or "put"
#' @param s_min Min value of the stock prices grid
#' @param s_max Man value of the stock prices grid
#' @param x_min Min value of the FX prices grid
#' @param x_max Max value of the FX prices grid
#' @param n_s Size of stock grid for finite difference grid
#' @param n_x Size of FX grid for finite difference grid
#' @param n_t Size of time grid for finite difference grid
#' @param alpha Parameter that defines the uniformity of the grid
#' @param lambda Penalty parameter greater than 1
#' @param tolerance Error tolerance
#'
#' @export
american_option_lv_2d <- function(s_0, x_0, k, tau, r_d, r_f, q, sigma_s, sigma_x, rho, type, s_min, s_max, x_min, x_max, n_s, n_x, n_t, alpha, lambda, tolerance) {
    .Call(`_LocalVolatility_american_option_lv_2d`, s_0, x_0, k, tau, r_d, r_f, q, sigma_s, sigma_x, rho, type, s_min, s_max, x_min, x_max, n_s, n_x, n_t, alpha, lambda, tolerance)
}

#' American Option 2D
#'
#' This function evaluates an American-style option on a common stock in a foreing currency using finite differences.
#'
#' @param s_0 Stock spot price
#' @param x_0 FX spot price
#' @param k Strike price
#' @param tau Time to expiry
#' @param r_d Risk-free rate (domestic)
#' @param r_f Risk-free rate (foreign)
#' @param q Dividend yield
#' @param sigma_s Volatility of the stock
#' @param sigma_x Volatility of the FX
#' @param rho Correlatin between the stock and the FX
#' @param type Either "call" or "put"
#' @param s_min Min value of the stock prices grid
#' @param s_max Man value of the stock prices grid
#' @param x_min Min value of the FX prices grid
#' @param x_max Max value of the FX prices grid
#' @param n_s Size of stock grid for finite difference grid
#' @param n_x Size of FX grid for finite difference grid
#' @param n_t Size of time grid for finite difference grid
#' @param alpha Parameter that defines the uniformity of the grid
#' @param lambda Penalty parameter greater than 1
#' @param tolerance Error tolerance
#'
#' @export
american_option_2d <- function(s_0, x_0, k, tau, r_d, r_f, q, sigma_s, sigma_x, rho, type, s_min, s_max, x_min, x_max, n_s, n_x, n_t, alpha, lambda, tolerance) {
    .Call(`_LocalVolatility_american_option_2d`, s_0, x_0, k, tau, r_d, r_f, q, sigma_s, sigma_x, rho, type, s_min, s_max, x_min, x_max, n_s, n_x, n_t, alpha, lambda, tolerance)
}

#' European Option Local Volatility 2D
#'
#' This function evaluates an European-style option on a common stock with local volatility in a foreing currency using finite differences.
#'
#' @param s_0 Stock spot price
#' @param x_0 FX spot price
#' @param k Strike price
#' @param tau Time to expiry
#' @param r_d Risk-free rate (domestic)
#' @param r_f Risk-free rate (foreign)
#' @param q Dividend yield
#' @param sigma_s Local volatility matrix of the stock
#' @param sigma_x Local volatility matrix of the FX
#' @param rho Correlatin between the stock and the FX
#' @param type Either "call" or "put"
#' @param s_min Min value of the stock prices grid
#' @param s_max Man value of the stock prices grid
#' @param x_min Min value of the FX prices grid
#' @param x_max Max value of the FX prices grid
#' @param n_s Size of stock grid for finite difference grid
#' @param n_x Size of FX grid for finite difference grid
#' @param n_t Size of time grid for finite difference grid
#' @param alpha Parameter that defines the uniformity of the grid
#'
#' @export
european_option_lv_2d <- function(s_0, x_0, k, tau, r_d, r_f, q, sigma_s, sigma_x, rho, type, s_min, s_max, x_min, x_max, n_s, n_x, n_t, alpha) {
    .Call(`_LocalVolatility_european_option_lv_2d`, s_0, x_0, k, tau, r_d, r_f, q, sigma_s, sigma_x, rho, type, s_min, s_max, x_min, x_max, n_s, n_x, n_t, alpha)
}

#' European Option 2D
#'
#' This function evaluates an European-style option on a common stock in a foreing currency using finite differences.
#'
#' @param s0 Stock spot price
#' @param x0 FX spot price
#' @param k Strike price
#' @param tau Time to expiry
#' @param r_d Risk-free rate (domestic)
#' @param r_f Risk-free rate (foreign)
#' @param q Dividend yield
#' @param sigma_s Volatility of the stock
#' @param sigma_x Volatility of the FX
#' @param rho Correlatin between the stock and the FX
#' @param type Either "call" or "put"
#' @param s_min Min value of the stock prices grid
#' @param s_max Man value of the stock prices grid
#' @param x_min Min value of the FX prices grid
#' @param x_max Max value of the FX prices grid
#' @param n_s Size of stock grid for finite difference grid
#' @param n_x Size of FX grid for finite difference grid
#' @param n_t Size of time grid for finite difference grid
#' @param alpha Parameter that defines the uniformity of the grid
#'
#' @export
european_option_2d <- function(s0, x0, k, tau, r_d, r_f, q, sigma_s, sigma_x, rho, type, s_min, s_max, x_min, x_max, n_s, n_x, n_t, alpha) {
    .Call(`_LocalVolatility_european_option_2d`, s0, x0, k, tau, r_d, r_f, q, sigma_s, sigma_x, rho, type, s_min, s_max, x_min, x_max, n_s, n_x, n_t, alpha)
}

# Register entry points for exported C++ functions
methods::setLoadAction(function(ns) {
    .Call(`_LocalVolatility_RcppExport_registerCCallable`)
})
